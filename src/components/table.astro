---
interface TableRow {
  key: string;
  value: { name: string; id?: string }[];
}

interface Props {
  data: TableRow[];
}

const { data } = Astro.props;
---

<div class="table-container">
  <table>
    <tbody>
      {
        data.map((row) => {
          if (row.value.length == 0) {
            return;
          } else {
            return (
              <tr>
                <td class="key">{row.key}</td>
                <td class="value">
                  {row.value.map((item, i) => {
                    if (item.id != null) {
                      return (
                        <span>
                          <!--prettier-ignore-->
                          <a href={"/immunodb/" + item.id}>{item.name}</a>{i < row.value.length - 1 && ", "}
                        </span>
                      );
                    } else {
                      return (
                        <span>
                          <!--prettier-ignore-->
                          {item.name}{i < row.value.length - 1 && ", "}
                        </span>
                      );
                    }
                  })}
                </td>
              </tr>
            );
          }
        })
      }
    </tbody>
  </table>
</div>

<style>
  table {
    border-collapse: separate;
    table-layout: auto;
  }

  td {
    text-align: left;
    padding: 4px;
    font-size: 12px;
    vertical-align: top;
    line-height: 16px;
  }
  .key {
    font-size: 14px;
    padding-left: 20px;
  }
  .value {
    padding-top: 5px;
  }
  .no-space {
    white-space: nowrap;
  }
</style>
